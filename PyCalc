from tkinter import *
import re

root = Tk()
root.title('Calculator')

i = 0


def get_variables(num):
    global i
    display.insert(i, num)
    i += 1


def clear_all():
    display.delete(0, END)


def undo():
    entire_string = display.get()
    if len(entire_string):
        new_string = entire_string[:-1]
        clear_all()
        display.insert(0, new_string)
    else:
        clear_all()
        display.insert(0, "Error")


def get_operation(operator):
    global i
    length = len(operator)
    display.insert(i, operator)
    i += length


def calculate():

    valp = {}
    vsym = []
    counter = -1
    vnum = re.sub("[^0-9.]", " ", display.get())
    split_str = list(display.get())
    vtmp = list(vnum.split())
    vcal = list(map(float, vtmp))

# extract symbols from full_list
    for x in split_str:
        counter += 1
        if not x.isnumeric():
            if x.find(".") == -1:
                valp[counter] = x

    for key in valp:
        vsym.append(valp[key])

    x = 0
    vroll = 0
    while x < (len(vcal)-1):
        if x > 0:
            if vsym[x] == "+":
                vroll = addi(vroll, float(vcal[x+1]))
            elif vsym[x] == "-":
                vroll = subt(vroll, float(vcal[x+1]))
            elif vsym[x] == "*":
                vroll = mult(vroll, float(vcal[x+1]))
            elif vsym[x] == "/":
                vroll = divi(vroll, float(vcal[x+1]))
            else:
                display.insert(0, "Error")
        else:
            if vsym[x] == "+":
                vroll = addi(float(vcal[x]), float(vcal[x+1]))
            elif vsym[x] == "-":
                vroll = subt(float(vcal[x]), float(vcal[x+1]))
            elif vsym[x] == "*":
                vroll = mult(float(vcal[x]), float(vcal[x+1]))
            elif vsym[x] == "/":
                vroll = divi(float(vcal[x]), float(vcal[x+1]))
            else:
                display.insert(0, "Error")

        x += 1

    clear_all()
    display.insert(0, "{:.2f}".format(vroll))


def addi(a, b):
    return a+b


def subt(a, b):
    return a-b


def mult(a, b):
    return a*b


def divi(a, b):
    return a/b


display = Entry(root)
display.grid(row=1, columnspan=6, sticky=W+E)

Button(root, text="1", command=lambda: get_variables(1)).grid(row=2, column=0)
Button(root, text="2", command=lambda: get_variables(2)).grid(row=2, column=1)
Button(root, text="3", command=lambda: get_variables(3)).grid(row=2, column=2)

Button(root, text="4", command=lambda: get_variables(4)).grid(row=3, column=0)
Button(root, text="5", command=lambda: get_variables(5)).grid(row=3, column=1)
Button(root, text="6", command=lambda: get_variables(6)).grid(row=3, column=2)

Button(root, text="7", command=lambda: get_variables(7)).grid(row=4, column=0)
Button(root, text="8", command=lambda: get_variables(8)).grid(row=4, column=1)
Button(root, text="9", command=lambda: get_variables(9)).grid(row=4, column=2)

Button(root, text="AC", command=lambda: clear_all()).grid(row=5, column=0)
Button(root, text="0", command=lambda: get_variables(0)).grid(row=5, column=1)
Button(root, text="=", command=lambda: calculate()).grid(row=5, column=2)

Button(root, text="+", command=lambda: get_operation("+")).grid(row=2, column=3)
Button(root, text="-", command=lambda: get_operation("-")).grid(row=3, column=3)
Button(root, text="*", command=lambda: get_operation("*")).grid(row=4, column=3)
Button(root, text="/", command=lambda: get_operation("/")).grid(row=5, column=3)

Button(root, text="pi", command=lambda: get_operation("*3.14")).grid(row=2, column=4)
Button(root, text="%", command=lambda: get_operation("%")).grid(row=3, column=4)
Button(root, text="(", command=lambda: get_operation("(")).grid(row=4, column=4)
Button(root, text="exp", command=lambda: get_operation("**")).grid(row=5, column=4)

Button(root, text="<-", command=lambda: undo()).grid(row=2, column=5)
Button(root, text="x!").grid(row=3, column=5)
Button(root, text=")", command=lambda: get_operation(")")).grid(row=4, column=5)
Button(root, text="^2", command=lambda: get_operation("**2")).grid(row=5, column=5)

root.mainloop()